#All SNPs coordinates are in GRCh37/hg19 coordinates
#Roadmap Epigenomics mnemonics BED files downloaded via:
wget -r --no-parent -A '*coreMarks_mnemonics.bed.gz*' https://egg2.wustl.edu/roadmap/data/byFileType/chromhmmSegmentations/ChmmModels/coreMarks/jointModel/final/ 

cat E002 E008 E001 E015 E014 E016 E003 E024 > ESC
cat E020 E019 E018 E021 E022 > iPSC
cat E007 E009 E010 E013 E012 E011 E004 E005 E006 > ES_derived_cells
cat E062 E034 E045 E033 E044 E043 E039 E041 E042 E040 E037 E048 E038 E047 > TCells
cat E029 E031 E035 E051 E050 E036 E032 E046 E030 > BCells
cat E026 E049 E025 E023 > Mesenchymal
cat E052 > Myosatellite
cat E055 E056 E059 E061 E057 E058 E028 E027 > Epithelial
cat E054 E053 > Neurospheres
cat E112 E093 > Thymus
cat E071 E074 E068 E069 E072 E067 E073 E070 E082 E081 > Brain
cat E063 > Adipose
cat E100 E108 E107 E089 E090 > Muscle
cat E083 E104 E095 E105 E065 > Heart
cat E078 E076 E103 E111 > Smooth_muscle
cat E092 E085 E084 E109 E106 E075 E101 E102 E110 E077 E079 E094 > Digestive
cat E099 E086 E088 E097 E087 E080 E091 E066 E098 E096 E113 > Other
cat E114 E115 E116 E117 E118 E119 E120 E121 E122 E123 E124 E125 E126 E127 E128 E129 > ENCODE

library(data.table)
library(dplyr)
library(tidyverse)
library(ggplot2)
library(GenomciRanges)
library(biomartr)


files <- list.files(pattern = "", full.names = TRUE)

for (file in files) {
  # Extract the table name from the file path
  table_name <- tools::file_path_sans_ext(basename(file))
  
  # Read the data from the file using fread from data.table
  data <- fread(file, header = FALSE, col.names = c('chrom', 'start', 'end', 'type'))
  
  # Add a 'Tissue' column with the original table name
  data$Tissue <- table_name
  
  # Assign the data.table to a variable in the global environment
  assign(table_name, data, envir = .GlobalEnv)
}

results_list <- list()
for (i in seq_along(table_list)) {
  results <- foverlaps(tested_variants, table_list[[i]], type = "within", nomatch = 0)
  results$Tissue <- colnames(table_list)[i]  # Add the tissue information
  results$type <- table_list[[i]]$type  # Add the type information
  results_list[[i]] <- results


adipose_ov=foverlaps(tested_variants, Adipose, type = "within")
brain_ov=foverlaps(tested_variants, Brain, type = "within")
digestive_ov=foverlaps(tested_variants, Digestive, type = "within")
epithelial_ov=foverlaps(tested_variants, Epithelial, type = "within")
esc_ov=foverlaps(tested_variants, ESC, type = "within")
ipsc_ov=foverlaps(tested_variants, iPSC, type = "within")
mesenchymal_ov=foverlaps(tested_variants, Mesenchymal, type = "within")
Myosatellite_ov=foverlaps(tested_variants, Myosatellite, type = "within")
other_ov=foverlaps(tested_variants, Other, type = "within")
tcells_ov=foverlaps(tested_variants, TCells, type = "within")
thymus_ov=foverlaps(tested_variants, Thymus, type = "within")
bcells_ov=foverlaps(tested_variants, BCells, type = "within")
encode_ov=foverlaps(tested_variants, ENCODE, type = "within")
ES_derived_cells_ov=foverlaps(tested_variants, ES_derived_cells, type = "within")
heart_ov=foverlaps(tested_variants, Heart, type = "within")
imr90_ov=foverlaps(tested_variants, IMR90_fetal_lung_fibroblast, type = "within")
muscle_ov=foverlaps(tested_variants, Muscle, type = "within")
neurospheres_ov=foverlaps(tested_variants, Neurospheres, type = "within")
smooth_ov=foverlaps(tested_variants, Smooth_muscle, type = "within")

overlaps_table = rbind(adipose_ov, brain_ov, digestive_ov, epithelial_ov, esc_ov, ipsc_ov, mesenchymal_ov,
Myosatellite_ov,other_ov, tcells_ov, thymus_ov, bcells_ov, encode_ov, E

#rename the roadmap versions
overlaps_table$`type`[overlaps_table$`type` == "14_ReprPCWk"] <- "Weak Repressed PolyComb"
overlaps_table$`type`[overlaps_table$`type` == "1_TssA"] <- "Active TSS"
overlaps_table$`type`[overlaps_table$`type` == "2_TssAFlnk"] <- "Flanking Active TSS"
overlaps_table$`type`[overlaps_table$`type` == "3_TxFlnk"] <- "Transcr. at gene 5' and 3'"
overlaps_table$`type`[overlaps_table$`type` == "4_Tx"] <- "Strong transcription"
overlaps_table$`type`[overlaps_table$`type` == "5_TxWk"] <- "Weak transcription"
overlaps_table$`type`[overlaps_table$`type` == "6_EnhG"] <- "Genic enhancers"
overlaps_table$`type`[overlaps_table$`type` == "7_Enh"] <- "Enhancers"
overlaps_table$`type`[overlaps_table$`type` == "8_ZNF/Rpts"] <- "ZNF genes & repeats"
overlaps_table$`type`[overlaps_table$`type` == "9_Het"] <- "Heterochromatin"
overlaps_table$`type`[overlaps_table$`type` == "10_TssBiv"] <- "Bivalent/Poised TSS"
overlaps_table$`type`[overlaps_table$`type` == "11_BivFlnk"] <- "Flanking Bivalent TSS/Enh"
overlaps_table$`type`[overlaps_table$`type` == "12_EnhBiv"] <- "Bivalent Enhancer"
overlaps_table$`type`[overlaps_table$`type` == "13_ReprPC"] <- "Repressed PolyComb"
overlaps_table$`type`[overlaps_table$`type` == "14_ReprPCWk"] <- "Weak Repressed PolyComb"
overlaps_table$`type`[overlaps_table$`type` == "15_Quies"] <- "Quiescent/Low"

#filter the active and inactive 
overlaps_active <- filter(overlaps_table,`type` == "Active TSS" | `type` == "Flanking Active TSS" | 
                       `type` == "Transcr. at gene 5' and 3'" | `type` == "Strong transcription" |
                       `type` == "Weak transcription" | `type` == "Genic enhancers" |
                       `type` == "Enhancers" | `type` ==  "ZNF genes & repeats")
overlaps_active$state <- "Active"
overlaps_inactive <- filter(overlaps_table,`type` == "Heterochromatin" | `type` == "Bivalent/Poised TSS" | 
                        `type` == "Flanking Bivalent TSS/Enh" | `type` ==  "Bivalent Enhancer" |
                        `type` == "Repressed PolyComb"| `type` == "Weak Repressed PolyComb" |
                        `type` == "Quiescent/Low")

overlaps_inactive <- filter(overlaps_table,`type` == "Heterochromatin" | `type` == "Bivalent/Poised TSS" |  
                        `type` == "Flanking Bivalent TSS/Enh" | `type` ==  "Bivalent Enhancer" |
                        `type` == "Repressed PolyComb"| `type` == "Weak Repressed PolyComb" |
                        `type` == "Quiescent/Low")
overlaps_inactive$state <- "Inactive"
overlaps_combined = rbind(overlaps_active, overlaps_inactive)


percentage_data <- overlaps %>%
  group_by(Tissue, state) %>%
  summarise(count = n()) %>%
  mutate(percentage = count / sum(count) * 100)

ggplot(percentage_data, aes(x = Tissue, y = percentage, fill = state)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = sprintf("%.1f%%", percentage)), vjust = -0.5) +
  labs(title = "Percentage of tested tariants by chromatin state",
       x = "Tissue",
       y = "Percentage") +
  scale_y_continuous(labels = scales::percent_format()) +
  theme_cowplot() +
  theme(axis.text.x=element_text(angle=45, hjust= 1)) 
