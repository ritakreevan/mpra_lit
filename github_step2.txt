library(data.table)library(dplyr)library(tidyverse)library(ggplot2)library(GenomciRanges)library(biomartr)library(motifbreakR)library(cowplot)library(readr)#----------------------------------------------------------------------------## STEP 2## Read in position tables and make one mastetable with unique regions from ## each table# table name:hg38_tested_variants n= 95642#unique n=94428#----------------------------------------------------------------------------read_table <- function(folder_path) {  files <- list.files(path = "/Users/rita/Desktop/MPRA_meta/Tested variants tables/position_hg38",                       full.names = TRUE)  master_table <- data.frame()  for (file in files) {    table_data <- read.table(file, header = FALSE, fill = TRUE, stringsAsFactors = FALSE)    unique_lines <- unique(table_data)    master_table <- rbind(master_table, unique_lines)  }    col_names <- c("chrom", "pos", "ref", "alt", "author")  names(master_table) <- col_names  assign("hg38_tested_variants", master_table, envir = .GlobalEnv)  return(master_table)}hg38_tested_variants <- read_table( "/Users/rita/Desktop/MPRA_meta/Tested variants tables/position_hg38")hg38_tested_variants$tested_variants = paste(hg38_tested_variants$chrom, ":",                                              hg38_tested_variants$pos, "-",                                              hg38_tested_variants$ref, "/",                                              hg38_tested_variants$alt, sep = "")hg38_tested_variants_unique <- hg38_tested_variants[!duplicated(hg38_tested_variants$tested_variants), ]write.table(hg38_tested_variants_uniques, file = "hg38_tested_variants_unique.tsv", sep = "\t", row.names = FALSE, col.names = TRUE)#---------------------------------##Combine rs table with pos table## n= 122414# n= 121658#---------------------------------#rsid table = merged [1] "chrom"  "pos"    "ref"    "alt"    "Author"#pos table = hg38_tested_variants_uniquenames(merged)[which(names(merged) == "Author")] <- "author"merged$rsid = NULLtested_variants_allhg38 = rbind(merged,hg38_tested_variants_unique)tested_variants_allhg38 = tested_variants_allhg38 %>%  distinct(tested_variants, .keep_all = TRUE)tested_variants_allhg38$tested_variants = NULL#count how many values in "ref" or "alt" column that are sep by "," or "/"# alt n=36count_separated_values <- function(column) {  sum(grepl("[/,]", column))}ref_count <- count_separated_values(tested_variants_allhg38$ref)alt_count <- count_separated_values(tested_variants_allhg38$alt)#-----------------##Fake VCF table##121658#-----------------create_fake_vcf_table <- function(tested_variants_allhg38) {  tested_variants_allhg38$chrom <- gsub("X", "23", tested_variants_allhg38$chrom)  fake_vcf_table <- data.frame(    "#CHROM" = tested_variants_allhg38$chrom,    "POS" = tested_variants_allhg38$pos,    "ID" = ".",    "REF" = tested_variants_allhg38$ref,    "ALT" = tested_variants_allhg38$alt,    "QUAL" = ".",    "FILTER" = "PASS",    "INFO" = ".",    "FORMAT" = "GT",    "FUNCTIONAL" = "1/1"  )    write.table(fake_vcf_table, file = "fake_vcf_table_hg38.tsv", quote = FALSE, sep = "\t", row.names = FALSE, col.names = TRUE)    return(fake_vcf_table)  }fake_vcf_table_hg38 <- create_fake_vcf_table(tested_variants_allhg38)